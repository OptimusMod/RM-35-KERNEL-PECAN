--- arch/arm/mach-msm/lge/devices_lge.c
+++ arch/arm/mach-msm/lge/devices_lge.c
@@ -216,39 +214,68 @@
 
 	return;
 }
+#endif
+
 void __init msm_add_fb_device(void) 
 {
+#ifdef CONFIG_LGE_HIDDEN_RESET_PATCH
 	lge_make_fb_pmem();
+#endif
 	platform_device_register(&msm_fb_device);
 }
 
 /* setting kgsl device */
 #ifdef CONFIG_ARCH_MSM7X27
-static struct resource kgsl_resources[] = {
-	{
-		.name = "kgsl_reg_memory",
-		.start = 0xA0000000,
-		.end = 0xA001ffff,
-		.flags = IORESOURCE_MEM,
+static struct resource kgsl_3d0_resources[] = {
+         {
+                 .name = KGSL_3D0_REG_MEMORY,
+                 .start = 0xA0000000,
+                 .end = 0xA001ffff,
+                 .flags = IORESOURCE_MEM,
+         },
+         {
+                 .name = KGSL_3D0_IRQ,
+                 .start = INT_GRAPHICS,
+                 .end = INT_GRAPHICS,
+                 .flags = IORESOURCE_IRQ,
+         },
+};
+
+static struct kgsl_device_platform_data kgsl_3d0_pdata = {
+	.pwr_data = {
+	.pwrlevel = {
+		   	{
+			.gpu_freq = 128000000,
+                        .bus_freq = 128000000,
+			},
 	},
-	{
-		.name = "kgsl_yamato_irq",
-		.start = INT_GRAPHICS,
-		.end = INT_GRAPHICS,
-		.flags = IORESOURCE_IRQ,
+	.init_level = 0,
+	.num_levels = 1,
+	.set_grp_async = NULL,
+	.idle_timeout = HZ/5,
+	.nap_allowed = true,
 	},
-};
+	.clk = {
+	.name = {
+	.clk = "grp_clk",
+	.pclk = "grp_pclk",
+	},
+     },
+	.imem_clk_name = {
+	.clk = "imem_clk",
+	.pclk = NULL,
+	},
+	};
 
-static struct kgsl_platform_data kgsl_pdata;
 
-static struct platform_device msm_device_kgsl = {
-	.name = "kgsl",
-	.id = -1,
-	.num_resources = ARRAY_SIZE(kgsl_resources),
-	.resource = kgsl_resources,
-	.dev = {
-		.platform_data = &kgsl_pdata,
-	},
+struct platform_device msm_kgsl_3d0 = {
+         .name = "kgsl-3d0",
+         .id = 0,
+         .num_resources = ARRAY_SIZE(kgsl_3d0_resources),
+         .resource = kgsl_3d0_resources,
+         .dev = {
+                 .platform_data = &kgsl_3d0_pdata,
+         },
 };
 
 void __init msm_add_kgsl_device(void) 
@@ -257,34 +284,29 @@
 	/* OEMs may modify the value at their discretion for performance */
 	/* The appropriate maximum replacement for 160000 is: */
 	/* clk_get_max_axi_khz() */
-	kgsl_pdata.high_axi_3d = 160000;
+	//kgsl_pdata.high_axi_3d = 160000;
 
 	/* 7x27 doesn't allow graphics clocks to be run asynchronously to */
 	/* the AXI bus */
-	kgsl_pdata.max_grp2d_freq = 0;
-	kgsl_pdata.min_grp2d_freq = 0;
-	kgsl_pdata.set_grp2d_async = NULL;
-	kgsl_pdata.max_grp3d_freq = 0;
-	kgsl_pdata.min_grp3d_freq = 0;
-	kgsl_pdata.set_grp3d_async = NULL;
-	kgsl_pdata.imem_clk_name = "imem_clk";
-	kgsl_pdata.grp3d_clk_name = "grp_clk";
-	kgsl_pdata.grp3d_pclk_name = "grp_pclk";
-	kgsl_pdata.grp2d0_clk_name = NULL;
-	kgsl_pdata.idle_timeout_3d = HZ/5;
-	kgsl_pdata.idle_timeout_2d = 0;
-
-#ifdef CONFIG_KGSL_PER_PROCESS_PAGE_TABLE
-	kgsl_pdata.pt_va_size = SZ_32M;
-	/* Maximum of 32 concurrent processes */
-	kgsl_pdata.pt_max_count = 32;
-#else
-	kgsl_pdata.pt_va_size = SZ_128M;
-	/* We only ever have one pagetable for everybody */
-	kgsl_pdata.pt_max_count = 1;
-#endif
-
-	platform_device_register(&msm_device_kgsl);
+	//kgsl_pdata.max_grp2d_freq = 0;
+	//kgsl_pdata.min_grp2d_freq = 0;
+	//kgsl_pdata.set_grp2d_async = NULL;
+	//kgsl_pdata.max_grp3d_freq = 0;
+	//kgsl_pdata.min_grp3d_freq = 0;
+	//kgsl_pdata.set_grp3d_async = NULL;
+	//kgsl_pdata.imem_clk_name = "imem_clk";
+	//kgsl_pdata.grp3d_clk_name = "grp_clk";
+	//kgsl_pdata.grp3d_pclk_name = "grp_pclk";
+	//kgsl_pdata.grp2d0_clk_name = NULL;
+	//kgsl_pdata.idle_timeout_3d = HZ/5;
+	//kgsl_pdata.idle_timeout_2d = 0;
+
+//#ifdef CONFIG_KGSL_PER_PROCESS_PAGE_TABLE
+//	kgsl_pdata.pt_va_size = SZ_32M;
+//#else
+//	kgsl_pdata.pt_va_size = SZ_128M;
+//#endif
+	platform_device_register(&msm_kgsl_3d0);
 }
 #endif
 
@@ -877,7 +913,7 @@
 #endif
 	.ldo_init       = msm_hsusb_ldo_init,
 	.pclk_required_during_lpm = 1,
-	.pclk_src_name		= "ebi1_usb_clk",
+	.pclk_src_name  = "ebi1_usb_clk",
 };
 
 #ifdef CONFIG_USB_GADGET
